const express = require('express');
const http = require('http');
const { Server } = require('socket.io');
const cors = require('cors');

const app = express();
const server = http.createServer(app);
const io = new Server(server, {
    cors: {
        origin: 'http://localhost:3000', // Frontend URL
        methods: ['GET', 'POST'],
    },
});

app.use(cors());
app.get('/', (req, res) => {
    res.send('Server is running...');
});

let documentContent = ''; // Shared document content

// WebSocket events
io.on('connection', (socket) => {
    console.log(`User connected: ${socket.id}`);

    // Send current document content to the newly connected user
    socket.emit('load_document', documentContent);

    // Handle document changes
    socket.on('update_document', (content) => {
        documentContent = content;
        socket.broadcast.emit('receive_document', content); // Send updates to other users
    });

    socket.on('disconnect', () => {
        console.log(`User disconnected: ${socket.id}`);
    });
});

const PORT = 5000;
server.listen(PORT, () => console.log(`Server running on port ${PORT}`));


import React, { useState, useEffect } from 'react';
import io from 'socket.io-client';
import './DocumentEditor.css'; // Optional for styling

const socket = io.connect('http://localhost:5000'); // Backend URL

const DocumentEditor = () => {
   const [content, setContent] = useState('');

   useEffect(() => {
       // Load existing document content
       socket.on('load_document', (data) => {
           setContent(data);
       });

       // Receive updates from other users
       socket.on('receive_document', (data) => {
           setContent(data);
       });

       return () => {
           socket.disconnect();
       };
   }, []);

   const handleChange = (e) => {
       const updatedContent = e.target.value;
       setContent(updatedContent);
       socket.emit('update_document', updatedContent); // Send updates to the server
   };

   return (
       <div className="editor-container">
           <h1>Real-Time Document Editor</h1>
           <textarea
               value={content}
               onChange={handleChange}
               placeholder="Start typing..."
           />
       </div>
   );
};

export default DocumentEditor;


.editor-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    margin-top: 20px;
    font-family: Arial, sans-serif;
}

textarea {
    width: 80%;
    height: 300px;
    padding: 10px;
    font-size: 16px;
    border: 1px solid #ccc;
    border-radius: 5px;
    resize: none;
}

textarea:focus {
    outline: none;
    border-color: #007bff;
    box-shadow: 0 0 5px rgba(0, 123, 255, 0.5);
}


import React from 'react';
import DocumentEditor from './components/DocumentEditor';

function App() {
   return (
       <div className="App">
           <DocumentEditor />
       </div>
   );
}

export default App;
